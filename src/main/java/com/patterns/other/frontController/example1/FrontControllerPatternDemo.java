package main.java.com.patterns.other.frontController.example1;

/**
 * В сложных веб-сайтах есть много одинаковых действий, которые надо производить во время обработки запросов. Это,
 * например, контроль безопасности, многоязычность и настройка интерфейса пользователя. Когда поведение входного
 * контроллера разбросано между несколькими объектами, дублируется большое количество кода. Помимо прочего возникают
 * сложности смены поведения в реальном времени.
 * Паттерн Front Controller объединяет всю обработку запросов, пропуская запросы через единственный объект-обработчик.
 * Этот объект содержит общую логику поведения, которая может быть изменена в реальном времени при помощи декораторов.
 * После обработки запроса контроллер обращается к конкретному объекту для отработки конкретного поведения.
 */
public class FrontControllerPatternDemo {
    public static void main(String[] args) {

        FrontController frontController = new FrontController();
        frontController.dispatchRequest("HOME");
        frontController.dispatchRequest("STUDENT");
    }
}
